<Window x:Class="SocketTester.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SocketTester"
        xmlns:viewmodel="clr-namespace:SocketTester"
        xmlns:command="clr-namespace:SocketTester.IO.Robot"
        xmlns:converter="clr-namespace:SocketTester.UI.Converter"
        xmlns:behavior="clr-namespace:SocketTester.UI.Behavior"
        xmlns:enum="clr-namespace:SocketTester.UI.Enums"
        mc:Ignorable="d"
        Title="Socket IO Tester" Height="900" Width="1100">
    <Window.Resources>
        <converter:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converter:MultiValueIntArrayConverter x:Key="MultiValueIntArrayConverter" />
        <Style TargetType="{x:Type Button}" x:Key="ButtonStyle.IAPFunction">
            <Setter Property="Width" Value="100"></Setter>
            <Setter Property="Height" Value="60"></Setter>

        </Style>
    </Window.Resources>
    <Window.DataContext>
        <viewmodel:MainWindowModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <ScrollViewer>
            <TabControl>
                <TabItem Header="MiddleWare Client">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="400" />
                            <RowDefinition Height="400" />
                        </Grid.RowDefinitions>
                        <GroupBox Header="Client Add and Remove">
                            <TabPanel>
                                <Border Width="5" />
                                <Button Content="Add new client"  Command="{Binding AddNewClientCommand}" ></Button>

                            </TabPanel>
                        </GroupBox>
                        <GroupBox  Grid.Row="1" Header="Client IP Setting">
                            <ScrollViewer Height="110">
                                <ItemsControl ItemsSource="{Binding ClientRepository.Items}" >
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Border BorderBrush="Gray" BorderThickness="1" Padding="10" Margin="3" Width="470">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="140"/>
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                                        <Label Content="Client" FontWeight="Bold"></Label>
                                                        <Label Content="{Binding ClientId}" FontWeight="Bold"></Label>
                                                        <Label Content="IP Address" />
                                                        <TextBox Width="100"   Text="{Binding IpAddress, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ToolTip="{Binding RelativeSource={x:Static RelativeSource.Self},
                                                                Path=(Validation.Errors)[0].ErrorContent}"  />
                                                        <Label Content="Port" />
                                                        <TextBox Width="50" Text="{Binding Port, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ToolTip="{Binding RelativeSource={x:Static RelativeSource.Self},
                                                                Path=(Validation.Errors)[0].ErrorContent}"/>
                                                    </StackPanel>
                                                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                                                        <Button  Content="Connect" Width="60"  Command="{Binding ConnectCommand}" CommandParameter="{Binding ClientId}"  IsEnabled="{Binding IsConnected, Converter={StaticResource InverseBooleanConverter}}" />
                                                        <Border Width="10"></Border>
                                                        <Button  Content="Disconnect" Width="70" Command="{Binding DisconnectCommand}"  CommandParameter="{Binding ClientId}"/>
                                                    </StackPanel>

                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </GroupBox>

                        <Grid Grid.Row="2" Margin="0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="440" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <GroupBox Grid.Column="0" Header="Send Client commands ">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="210"/>
                                        <ColumnDefinition Width="210"/>
                                    </Grid.ColumnDefinitions>
                                    <ListBox x:Name="ClientsListBox" Width="200" ItemsSource="{Binding ClientRepository.Items}" SelectedIndex="0">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Label Content="Client" FontWeight="Bold"/>
                                                        <Label Content="{Binding ClientId}" FontWeight="Bold"/>
                                                        <Label>
                                                            <Label.Style>
                                                                <Style TargetType="{x:Type Label}">
                                                                    <Setter Property="Content" Value="Disconnected"/>
                                                                    <Setter Property="Foreground" Value="Red"/>
                                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                                                            <Setter Property="Content" Value="Connected"/>
                                                                            <Setter Property="Foreground" Value="Blue"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>

                                                            </Label.Style>
                                                        </Label>

                                                    </StackPanel>
                                                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                                                        <Label Content="{Binding IpAddress}"/>
                                                        <Label Content="{Binding Port}"/>
                                                    </StackPanel>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <StackPanel Orientation="Vertical" Grid.Column="1"  >
                                        <Border Width="5" />
                                        <!--<Button Content="Robot call reception response" MinWidth="80"  Command="{Binding SendClientCommand}" CommandParameter="{x:Static command:RobotProtocolProcessor.ROBOT_CALL_RECEPTION_RESPONSE}"/>-->
                                        <Button Content="Robot call request response(0x61)" MinWidth="80" Height="40"  Command="{Binding SendClientCommand}" >
                                            <Button.CommandParameter>
                                                <MultiBinding Converter="{StaticResource MultiValueIntArrayConverter}">
                                                    <Binding Path="SelectedItem.ClientId" ElementName="ClientsListBox" />
                                                    <Binding Source="{x:Static command:RobotIOConstant.IO_CMD_ROBOT_CALL_REQUEST}"/>
                                                </MultiBinding>
                                            </Button.CommandParameter>
                                        </Button>
                                        <Border Width="5" Height="5" />
                                        <Button Content="Robot approach request(0x62)" MinWidth="100" Height="40" Command="{Binding SendClientCommand}" >
                                            <Button.CommandParameter>
                                                <MultiBinding Converter="{StaticResource MultiValueIntArrayConverter}">
                                                    <Binding Path="SelectedItem.ClientId" ElementName="ClientsListBox" />
                                                    <Binding Source="{x:Static command:RobotIOConstant.IO_CMD_ROBOT_APPROACH_REQUEST}"/>
                                                </MultiBinding>
                                            </Button.CommandParameter>
                                        </Button>
                                        <Border Width="5" Height="5" />

                                        <Button Content="Robot IN Completed Event(0x63)" MinWidth="100" Height="40" Command="{Binding SendClientCommand}" >
                                            <Button.CommandParameter>
                                                <MultiBinding Converter="{StaticResource MultiValueIntArrayConverter}">
                                                    <Binding Path="SelectedItem.ClientId" ElementName="ClientsListBox" />
                                                    <Binding Source="{x:Static command:RobotIOConstant.IO_CMD_ROBOT_IN_COMPLETED_EVENT}"/>
                                                </MultiBinding>
                                            </Button.CommandParameter>
                                        </Button>
                                        <Border Width="5" Height="5" />

                                        <Button Content="Robot Out Completed Event(0x64)" MinWidth="100" Height="40" Command="{Binding SendClientCommand}" >
                                            <Button.CommandParameter>
                                                <MultiBinding Converter="{StaticResource MultiValueIntArrayConverter}">
                                                    <Binding Path="SelectedItem.ClientId" ElementName="ClientsListBox" />
                                                    <Binding Source="{x:Static command:RobotIOConstant.IO_CMD_ROBOT_OUT_COMPLETED_EVENT}"/>
                                                </MultiBinding>
                                            </Button.CommandParameter>
                                        </Button>
                                        <Border Width="5" Height="5" />
                                        <Button Content="Keep Alive" MinWidth="100" Height="40" Command="{Binding SendClientCommand}" Visibility="Collapsed" >
                                            <Button.CommandParameter>
                                                <MultiBinding Converter="{StaticResource MultiValueIntArrayConverter}">
                                                    <Binding Path="SelectedItem.ClientId" ElementName="ClientsListBox" />
                                                    <Binding Source="{x:Static command:RobotIOConstant.IO_CMD_ROBOT_KEEP_ALIVE_SW}"/>
                                                </MultiBinding>
                                            </Button.CommandParameter>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>
                            <GroupBox Header="Server response" Grid.Column="1">
                                <DataGrid RowHeight="50" ItemsSource="{Binding RobotRepository.Items}" AutoGenerateColumns="False" IsReadOnly="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="ID" Width="40" Binding="{Binding ClientId}" />
                                        <DataGridTextColumn Width="90" Binding="{Binding ButtonPressResult}">
                                            <DataGridTextColumn.Header>
                                                <TextBlock>
                                                    <Run>Button(0x60)</Run>
                                                    <LineBreak/>
                                                    <Run>Press Result</Run>
                                                </TextBlock>
                                            </DataGridTextColumn.Header>
                                        </DataGridTextColumn>

                                        <DataGridTemplateColumn  Width="120">
                                            <DataGridTemplateColumn.Header>
                                                <TextBlock>
                                                    <Run>Robot Call(0x61)</Run>
                                                    <LineBreak/>
                                                    <Run>Request Result</Run>
                                                </TextBlock>
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding RobotCallRequestResult}" TextWrapping="Wrap"></TextBlock>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn Width="120">
                                            <DataGridTemplateColumn.Header>
                                                <TextBlock>
                                                    <Run>Robot Approach</Run>
                                                    <LineBreak/>
                                                    <Run>Request Result</Run>
                                                    <LineBreak/>
                                                    <Run>Event(0x62)</Run>
                                                </TextBlock>
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding RobotApproachRequestResult}" TextWrapping="Wrap"></TextBlock>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn Width="120">
                                            <DataGridTemplateColumn.Header>
                                                <TextBlock>
                                                    <Run>Robot In</Run>
                                                    <LineBreak/>
                                                    <Run>Completed Result</Run>
                                                    <LineBreak/>
                                                    <Run>Event(0x63)</Run>
                                                </TextBlock>
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding RobotInCompletedResult}" TextWrapping="Wrap"></TextBlock>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn Width="120" >
                                            <DataGridTemplateColumn.Header>
                                                <TextBlock>
                                                    <Run>Robot Out</Run>
                                                    <LineBreak/>
                                                    <Run>Completed Result</Run>
                                                    <LineBreak/>
                                                    <Run>Event(0x64)</Run>
                                                </TextBlock>
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding RobotOutCompletedResult}" TextWrapping="Wrap"></TextBlock>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>


                                    </DataGrid.Columns>
                                </DataGrid>
                            </GroupBox>
                        </Grid>

                        <Grid Grid.Row="3" Margin="0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <GroupBox Grid.Column="0" Header="IAP Function">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <TabPanel Grid.Row="0" HorizontalAlignment="Right">
                                        <!--<Button Style="{StaticResource ButtonStyle.IAPFunction}" Command="{Binding ExecuteIAPFunctionCommand}" CommandParameter="{x:Static enum:IAPFunctionType.NormalModeSetting}" >
                                            <TextBlock>
                                                <Run>Normal Mode</Run>
                                                <LineBreak/>
                                                <Run>Setting</Run>
                                            </TextBlock>
                                        </Button>
                                        <Border Width="10" />
                                        <Button Style="{StaticResource ButtonStyle.IAPFunction}" Command="{Binding ExecuteIAPFunctionCommand}" CommandParameter="{x:Static enum:IAPFunctionType.IAPModeSetting}">
                                            <TextBlock>
                                                <Run>IAP Mode</Run>
                                                <LineBreak/>
                                                <Run>Setting</Run>
                                            </TextBlock>
                                        </Button>-->
                                        <!--<Border Width="10"/>-->

                                        <Button Style="{StaticResource ButtonStyle.IAPFunction}" Command="{Binding ExecuteIAPFunctionCommand}" CommandParameter="{x:Static enum:IAPFunctionType.FileLoad}">
                                            <TextBlock>
                                                <Run>File</Run>
                                                <LineBreak/>
                                                <Run>Load</Run>
                                            </TextBlock>
                                        </Button>
                                        <Border Width="10"/>

                                        <Button Style="{StaticResource ButtonStyle.IAPFunction}" Command="{Binding ExecuteIAPFunctionCommand}" CommandParameter="{x:Static enum:IAPFunctionType.IAPStart}">
                                            <TextBlock>
                                                <Run>IAP</Run>
                                                <LineBreak/>
                                                <Run>Start</Run>
                                            </TextBlock>
                                        </Button>
                                        <Border Width="10"/>

                                        <Button Style="{StaticResource ButtonStyle.IAPFunction}" Command="{Binding ExecuteIAPFunctionCommand}" CommandParameter="{x:Static enum:IAPFunctionType.IAPStop}">
                                            <TextBlock>
                                                 <Run>IAP</Run>
                                                 <LineBreak/>
                                                 <Run>Stop</Run>
                                            </TextBlock>
                                        </Button>
                                    </TabPanel>
                                    <DataGrid Margin="0,5,0,0" Grid.Row="1" RowHeight="50" ItemsSource="{Binding ClientRepository.Items}" AutoGenerateColumns="False" IsReadOnly="True">
                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn Width="60">
                                                <DataGridTemplateColumn.Header>
                                                    <CheckBox Content="" IsChecked="{Binding DataContext.IsAllSelected, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                                </DataGridTemplateColumn.Header>
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTextColumn Header="ID" Width="40" Binding="{Binding ClientId }" />
                                            <DataGridTextColumn Header="IP Address" Width="130">
                                                <DataGridTextColumn.Binding>
                                                    <MultiBinding StringFormat="{}{0}:{1}">
                                                        <Binding Path="IpAddress"/>
                                                        <Binding Path="Port"/>
                                                    </MultiBinding>

                                                </DataGridTextColumn.Binding>
                                            </DataGridTextColumn>
                                            <DataGridTemplateColumn Header="Progress Time" Width="250">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                            <!-- Progress Bar -->
                                                            <ProgressBar Width="150" Height="30"
                                                             Value="{Binding Progress}" 
                                                             Maximum="100" />
                                                            <!-- Time Text -->
                                                            <TextBlock Text="{Binding TimeElapsed, StringFormat=' {0:hh\\:mm\\:ss}'}"
                                                               Margin="10,0,0,0"
                                                               VerticalAlignment="Center" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn Width="120" Header="Status">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding IAPStatus}"></TextBlock>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn Width="1*" Header="Description">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding IAPDescription}"></TextBlock>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </GroupBox>
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>
        </ScrollViewer>
        <TextBox Grid.Row="1" MaxLength="{Binding ProcessMessageMaxLength}" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True" IsReadOnly="True" Text="{Binding ProcessMessage}" behavior:TextBoxScrollBehavior.AutoScroll="True"></TextBox>
    </Grid>
</Window>
